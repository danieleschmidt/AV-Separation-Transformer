# Production deployment configuration for AV-Separation-Transformer
version: '3.8'

services:
  av-separation-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: av-separation-api
    restart: unless-stopped
    
    ports:
      - "8000:8000"
    
    environment:
      - LOG_LEVEL=INFO
      - MODEL_PATH=/app/models
      - DATA_PATH=/app/data
      - LANGUAGE=en
      - REGION=US
      - MAX_UPLOAD_SIZE=100MB
      - WORKERS=4
      
      # Security
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - API_SECRET_KEY=${API_SECRET_KEY}
      
      # Database
      - DATABASE_URL=${DATABASE_URL:-sqlite:///data/app.db}
      
      # Monitoring
      - PROMETHEUS_ENABLED=true
      - JAEGER_ENDPOINT=${JAEGER_ENDPOINT}
      - PUSHGATEWAY_URL=${PUSHGATEWAY_URL}
      
      # Compliance
      - GDPR_ENABLED=true
      - AUDIT_LOGGING=true
      - ENCRYPTION_ENABLED=true
    
    volumes:
      - ./models:/app/models:ro
      - av-separation-data:/app/data
      - av-separation-logs:/app/logs
      - av-separation-uploads:/app/uploads
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'
    
    networks:
      - av-separation-network
    
    depends_on:
      - redis
      - prometheus
      - jaeger

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: av-separation-redis
    restart: unless-stopped
    
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    
    volumes:
      - av-separation-redis:/data
    
    networks:
      - av-separation-network
    
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: av-separation-prometheus
    restart: unless-stopped
    
    ports:
      - "9090:9090"
    
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - av-separation-prometheus:/prometheus
    
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    
    networks:
      - av-separation-network

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: av-separation-jaeger
    restart: unless-stopped
    
    ports:
      - "16686:16686"
      - "14268:14268"
    
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    
    networks:
      - av-separation-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: av-separation-grafana
    restart: unless-stopped
    
    ports:
      - "3000:3000"
    
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    
    volumes:
      - av-separation-grafana:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    
    networks:
      - av-separation-network
    
    depends_on:
      - prometheus

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: av-separation-nginx
    restart: unless-stopped
    
    ports:
      - "80:80"
      - "443:443"
    
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - av-separation-logs:/var/log/nginx
    
    networks:
      - av-separation-network
    
    depends_on:
      - av-separation-api

volumes:
  av-separation-data:
    driver: local
  av-separation-logs:
    driver: local
  av-separation-uploads:
    driver: local
  av-separation-redis:
    driver: local
  av-separation-prometheus:
    driver: local
  av-separation-grafana:
    driver: local

networks:
  av-separation-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16